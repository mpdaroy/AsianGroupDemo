export const SESSIONS = new Map();
export const BROWSER_POOL = new Map();
export const EVENTS = {
    'suite': 'suite:start',
    'suite end': 'suite:end',
    'test': 'test:start',
    'test end': 'test:end',
    'hook': 'hook:start',
    'hook end': 'hook:end',
    'pass': 'test:pass',
    'fail': 'test:fail',
    'retry': 'test:retry',
    'pending': 'test:pending'
};
export const FRAMEWORK_SUPPORT_ERROR = 'Currently only "mocha" is supported as framework when using @wdio/browser-runner.';
export var MESSAGE_TYPES;
(function (MESSAGE_TYPES) {
    MESSAGE_TYPES[MESSAGE_TYPES["consoleMessage"] = 0] = "consoleMessage";
    MESSAGE_TYPES[MESSAGE_TYPES["commandRequestMessage"] = 1] = "commandRequestMessage";
    MESSAGE_TYPES[MESSAGE_TYPES["commandResponseMessage"] = 2] = "commandResponseMessage";
    MESSAGE_TYPES[MESSAGE_TYPES["hookTriggerMessage"] = 3] = "hookTriggerMessage";
    MESSAGE_TYPES[MESSAGE_TYPES["hookResultMessage"] = 4] = "hookResultMessage";
})(MESSAGE_TYPES = MESSAGE_TYPES || (MESSAGE_TYPES = {}));
export const DEFAULT_INCLUDE = ['**'];
export const DEFAULT_FILE_EXTENSIONS = ['.js', '.cjs', '.mjs', '.ts', '.mts', '.cts', '.tsx', '.jsx', '.vue', '.svelte'];
export const DEFAULT_REPORTS_DIRECTORY = 'coverage';
export const SUMMARY_REPORTER = 'json-summary';
export const COVERAGE_FACTORS = ['lines', 'functions', 'branches', 'statements'];
export const DEFAULT_COVERAGE_REPORTS = ['text', 'html', 'clover', SUMMARY_REPORTER];
export const GLOBAL_TRESHOLD_REPORTING = 'ERROR: Coverage for %s (%s%) does not meet global threshold (%s%)';
export const FILE_TRESHOLD_REPORTING = 'ERROR: Coverage for %s (%s%) does not meet threshold (%s%) for %s';
