import type { Environment } from './types.js';
import type { ReportOptions } from 'istanbul-reports';
export declare const SESSIONS: Map<string, Environment>;
export declare const BROWSER_POOL: Map<string, WebdriverIO.Browser>;
export declare const EVENTS: {
    readonly suite: "suite:start";
    readonly 'suite end': "suite:end";
    readonly test: "test:start";
    readonly 'test end': "test:end";
    readonly hook: "hook:start";
    readonly 'hook end': "hook:end";
    readonly pass: "test:pass";
    readonly fail: "test:fail";
    readonly retry: "test:retry";
    readonly pending: "test:pending";
};
export declare const FRAMEWORK_SUPPORT_ERROR = "Currently only \"mocha\" is supported as framework when using @wdio/browser-runner.";
export declare enum MESSAGE_TYPES {
    consoleMessage = 0,
    commandRequestMessage = 1,
    commandResponseMessage = 2,
    hookTriggerMessage = 3,
    hookResultMessage = 4
}
export declare const DEFAULT_INCLUDE: string[];
export declare const DEFAULT_FILE_EXTENSIONS: string[];
export declare const DEFAULT_REPORTS_DIRECTORY = "coverage";
export declare const SUMMARY_REPORTER = "json-summary";
export declare const COVERAGE_FACTORS: readonly ["lines", "functions", "branches", "statements"];
export declare const DEFAULT_COVERAGE_REPORTS: (keyof ReportOptions)[];
export declare const GLOBAL_TRESHOLD_REPORTING = "ERROR: Coverage for %s (%s%) does not meet global threshold (%s%)";
export declare const FILE_TRESHOLD_REPORTING = "ERROR: Coverage for %s (%s%) does not meet threshold (%s%) for %s";
//# sourceMappingURL=constants.d.ts.map